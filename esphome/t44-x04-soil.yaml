# X04v1.3
# ESP32-S3 N8
# Soil Sensor RS485

substitutions:
  dev: T44
  name: t44x04soil

#deep_sleep:
#  id: sleep1
#  run_duration: 40s
#  sleep_duration: 30min

esphome:
  name: ${name}
  #friendly_name: ${dev}
  #name_add_mac_suffix: true
  project:
    name: easyhan.soil-rs485
    version: "1.1"

dashboard_import:
  package_import_url: github://nikito7/easyhan/esphome/t44-x04-soil.yaml@dev
  import_full_config: true

esp32:
  #board: adafruit_feather_esp32s3 # N4 R2
  board: esp32-s3-devkitc-1 # N8
  #board: esp32-c6-devkitc-1
  framework:
    type: arduino
  flash_size: 8MB
  variant: esp32s3

wifi:
  output_power: 15db
  use_address: 10.1.0.33

  ssid: !secret wifi_ssid
  password: !secret wifi_key
  
  ap:
    ssid: "Easy-HAN-${dev}"
    password: edpbox123
    #ap_timeout: 15s # change me

captive_portal:

###

esp32_ble_tracker:
bluetooth_proxy:

###

web_server:
  local: true
  
logger:
  level: debug

api:
  reboot_timeout: 30min

ota:
  - platform: esphome

time:
  - platform: homeassistant
    id: esptime

button:
  - platform: restart
    name: "${dev} ESP Restart"

#  - platform: template
#    name: "${dev} ESP Prevent Sleep"
#    on_press:
#      then:
#        - deep_sleep.prevent: sleep1

switch:
  - platform: gpio
    id: led_pin
    pin:
      number: 39
      inverted: yes

one_wire:
  - platform: gpio
    pin: 38

####

uart:

#ifdef ESP32S3
#define HAN_DIR 16
#define HAN_TX 15
#define HAN_RX 17

#elif ESP32C6
#define HAN_DIR 3
#define HAN_TX 5
#define HAN_RX 4

  id: modbus_serial
  rx_pin: 17
  tx_pin: 15
  baud_rate: 4800
  stop_bits: 1

modbus:
  flow_control_pin: 16
  id: modbus1
  uart_id: modbus_serial
  send_wait_time: 500ms

modbus_controller:
  - id: edpbox
    update_interval: 30s
    address: 0x1
    command_throttle: 500ms
    setup_priority: -10

####

sensor:

####

  - platform: dallas_temp
    name: "${dev} Aquarium Water Temp"
    device_class: temperature
    state_class: measurement
    filters:
      - filter_out: nan
    update_interval: 30s

####

  - platform: modbus_controller
    name: "${dev} Soil Humidity"
    address: 0
    unit_of_measurement: "%"
    register_type: read
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    device_class: humidity
    state_class: measurement

  - platform: modbus_controller
    name: "${dev} Soil Temperature"
    address: 1
    unit_of_measurement: "Â°C"
    register_type: read
    value_type: S_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
    device_class: temperature
    state_class: measurement

####

  - platform: template
    name: "${dev} Adc In"
    id: adc_in_v
    accuracy_decimals: 2
    device_class: voltage
    unit_of_measurement: "V"
    state_class: measurement

  - platform: template
    name: "${dev} Battery"
    id: batt
    filters:
      - calibrate_linear:
         datapoints:
          - 7.0 -> 0.0
          - 7.4 -> 10.0
          - 8.4 -> 100.0
      - clamp:
          min_value: 0
          max_value: 100
    accuracy_decimals: 0
    device_class: battery
    unit_of_measurement: "%"
    state_class: measurement

  - platform: adc
    name: "${dev} Adc In raw"
    raw: true
    pin: 1
    attenuation: 0dB
    samples: 20
    accuracy_decimals: 0
    device_class: ""
    unit_of_measurement: "raw"
    state_class: measurement
    update_interval: 10s
    on_value:
      then:
        - lambda: id(batt).publish_state(x/257.2580645161);
        - lambda: id(adc_in_v).publish_state(x/257.2580645161);

###

###

  - platform: template
    name: "${dev} ESP Free Heap"
    lambda: |-
      float heap = ESP.getFreeHeap();
      // float heap = esp_get_free_heap_size();
      return heap / 1024.0;
    unit_of_measurement: "kB"
    accuracy_decimals: 0
    icon: mdi:chip
    state_class: measurement
    update_interval: 10s

  - platform: wifi_signal
    name: "${dev} ESP Signal"
    unit_of_measurement: "dB"
    state_class: measurement
    update_interval: 10s

  - platform: uptime
    name: "${dev} ESP Uptime"
    filters:
      - lambda: return x/3600.0;
    unit_of_measurement: "h"
    accuracy_decimals: 1
    device_class: ""
    update_interval: 30s

### ### ###

text_sensor:

  - platform: version
    name: "${dev} ESPHome Version"
    hide_timestamp: true


### ### ###


###


#######
# eof #
#######

